name: RCAN-FGAx4
model_type: UpsamplerModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0
data_range: 255

datasets:
  test_1:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/Set5/GTmod12/GT
    dataroot_lq: datasets/Set5/GTmod12/LRbicx4
    io_backend:
      type: disk

  test_2:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: datasets/Set14/GTmod12/GT
    dataroot_lq: datasets/Set14/GTmod12/LRbicx4
    io_backend:
      type: disk

  test_3:
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: datasets/urban100/GTmod12/GT
    dataroot_lq: datasets/urban100/GTmod12/LRbicx4
    io_backend:
      type: disk

  test_4:
    name: Manga109
    type: PairedImageDataset
    dataroot_gt: datasets/manga109/GTmod12/GT
    dataroot_lq: datasets/manga109/GTmod12/LRbicx4
    io_backend:
      type: disk

  test_5:
    name: BSDS100
    type: PairedImageDataset
    dataroot_gt: datasets/BSDS100/GTmod12/GT
    dataroot_lq: datasets/BSDS100/GTmod12/LRbicx4
    io_backend:
      type: disk

  test_6:
    name: DTD235
    type: PairedImageDataset
    dataroot_gt: datasets/DTD235/GTmod12/GT
    dataroot_lq: datasets/DTD235/GTmod12/LRbicx4
    io_backend:
      type: disk

  test_7:
    name: DIV2K100
    type: PairedImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    dataroot_lq: datasets/DIV2K/DIV2K_valid_LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk
      
# network structures
network_g:
  type: RCAN_
  n_colors: 3
  n_feats: 64
  res_scale: 1
  reduction: 16
  n_resgroups: 10
  n_resblocks: 20
  scale: [4]
  rgb_range: 255

# upsampler settings
network_upsampler:
  type: FGA
  # common args
  dim: 64
  out_dim: 3
  upscale: 4
  # attention args
  window_size: 1
  overlap_ratio: 4

# path
path:
  pretrain_network_g: experiments/pretrained_models/FGA/RCAN/RCAN-FGAx4.pth
  strict_load_g: true
  param_key_g: params_ema

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
    frc_auc:
      type: calculate_frc_auc
      num_rho: 64
      full: true
    qtr_frc_auc:
      type: calculate_frc_auc
      num_rho: 64
      full: false